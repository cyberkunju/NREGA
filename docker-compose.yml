version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: mgnrega-db
    environment:
      POSTGRES_DB: mgnrega
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mgnrega-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mgnrega-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mgnrega
      DB_USER: postgres
      DB_PASSWORD: postgres123
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - mgnrega-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mgnrega-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - mgnrega-network
    stdin_open: true
    tty: true

  # ETL Service (runs continuously with cron scheduler)
  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    container_name: mgnrega-etl
    environment:
      NODE_ENV: development
      GOV_API_ENDPOINT: https://api.data.gov.in/resource/ee03643a-ee4c-48c2-ac30-9f2ff26ab722
      GOV_API_KEY: 579b464db66ec23bdd000001d68ccbbe91b645a3578141daa6dc3a34
      STATE_FILTER: ""
      CRON_MODE: "true"
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mgnrega
      DB_USER: postgres
      DB_PASSWORD: postgres123
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./etl:/app
      - /app/node_modules
    networks:
      - mgnrega-network
    restart: unless-stopped
    command: npm start

volumes:
  postgres_data:

networks:
  mgnrega-network:
    driver: bridge
