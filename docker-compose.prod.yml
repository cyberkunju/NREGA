version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: mgnrega-db
    environment:
      POSTGRES_DB: ${DB_NAME:-mgnrega}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mgnrega-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: mgnrega-api
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-mgnrega}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mgnrega-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}
    container_name: mgnrega-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - mgnrega-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ETL Service
  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile.prod
    container_name: mgnrega-etl
    environment:
      NODE_ENV: production
      GOV_API_ENDPOINT: ${GOV_API_ENDPOINT}
      GOV_API_KEY: ${GOV_API_KEY}
      STATE_FILTER: ${STATE_FILTER:-}
      CRON_MODE: "true"
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-mgnrega}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - mgnrega-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 192M

volumes:
  postgres_data:
    driver: local

networks:
  mgnrega-network:
    driver: bridge
